@startuml
"Client"
"Analyst"

package "web-server" {
    [NGINX]
}
package Auth_API {
    [Flask_auth_api]
    database Postgres_Auth
    database [Redis_auth]
    '----------локальные комментарий
    'note right of [Redis_auth]
    ': Отозванные refresh токены
}
package ETL {
    [ETL_service]
}
package Async_FastAPI {
    [Fast_API]
    database "ElasticSearch"
    database "Redis"
}
package Django {
    [Movies_admin]
    database Postgres
}
package "Tracing and monitoring" {
    [Jaeger]
}

package "event_api" {
    [Fast_event_api]
    database Redis_event
}

package "event_broker" {
    [Kafka]
}


package "event_storage" {
    database Clickhouse
}

'------------Связи ---------------
[Client] -[hidden]-> Auth_API
[Client] --> [NGINX]
[NGINX] --> [Flask_auth_api]
[NGINX] --> [Fast_API]
[ETL_service] --> ElasticSearch
[ETL_service] <-- Postgres
[Fast_API] <--> Redis: cashe
[Fast_API] <-- ElasticSearch
Postgres <--> [Movies_admin]
[Flask_auth_api] <-r-> [Redis_auth]
[Flask_auth_api] -r-> Postgres_Auth
[Jaeger] --> [Fast_API]

[Kafka] --> Clickhouse
Clickhouse <-- [Analyst]

[Fast_event_api] -->[Flask_auth_api]
[Fast_event_api] --> [Kafka]
[Fast_event_api] <--> [Redis_event]
Client ..> [Fast_event_api]: опосредованный \n вызов \n событийного API

'--------- Комментарии ----------
'note right of [NGINX]
'    Прокси веб сервер
'end note
'note left of [Client]: Клиентские запросы
'--------- Раскраска ------------
skinparam DatabaseBackgroundColor Aqua
@enduml
