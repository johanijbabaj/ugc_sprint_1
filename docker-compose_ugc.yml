version: "3.7"

services:
  fast_event_api:
    restart: unless-stopped
    build:
      context: fast_event_api
      dockerfile: Dockerfile
    container_name: fast_event_api
    env_file:
      - fa.env
    volumes:
      - ./fast_event_api:/fast_event_api:ro
    networks:
      - movies_network
    ports:
      - "8000:8000"
    command: ["python", "main.py"]
    depends_on:
      - redis_ugc
      - kafka
      - zookeeper

  flask_auth_api:
    build:
      context: auth_api/flask_app
      dockerfile: Dockerfile
    container_name: flask_auth_api
    env_file:
      - auth.env
    volumes:
      - ./auth_api/flask_app:/auth_api/flask_app
    restart: unless-stopped
    networks:
      - movies_network
    depends_on:
      - redis_ugc
      - postgres_auth

  postgres_auth:
    image: postgres:13-alpine
    container_name: postgres_auth
    env_file:
      - db_auth.env
    volumes:
      - ./auth_api/postgres_auth/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - movies_network

  redis_ugc:
    build:
      context: auth_api/redis_auth
      dockerfile: Dockerfile
    container_name: redis_auth
    volumes:
      - ./auth_api/redis_auth/conf/etc:/usr/local/etc/redis
    #ports:
    #- "6379:6379"
    networks:
      - movies_network
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - movies_network
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    restart: always
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - movies_network

  clickhouse:
    image: yandex/clickhouse-server
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - movies_network

volumes:
  static_volume:

networks:
  movies_network:
